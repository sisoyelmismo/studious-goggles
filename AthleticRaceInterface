import java.awt.Window;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.JScrollPane;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
public class AthleticalRaceInterface extends javax.swing.JFrame {


    public AthleticalRaceInterface() {
       
        initComponents();
     }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jlabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        registro = new javax.swing.JTextArea();
        Registerbutton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        nombresregistrados = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        resultados = new javax.swing.JTextArea();
        Startbutton = new javax.swing.JButton();
        Terminatebutton = new javax.swing.JButton();
        Restartbutton = new javax.swing.JButton();

        jLabel2.setText("jLabel2");

        jButton1.setText("jButton1");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Carrera Atletica");

        jlabel2.setText("Registrar corredor (maximo 5)");

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        registro.setColumns(20);
        registro.setRows(5);
        jScrollPane2.setViewportView(registro);

        Registerbutton.setText("Registrar");
        Registerbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterbuttonActionPerformed(evt);
            }
        });

        jLabel3.setText("Corredores Registrados");

        nombresregistrados.setEditable(false);
        nombresregistrados.setColumns(20);
        nombresregistrados.setRows(5);
        jScrollPane1.setViewportView(nombresregistrados);

        jLabel4.setText("Resultados");

        resultados.setColumns(20);
        resultados.setRows(5);
        jScrollPane3.setViewportView(resultados);

        Startbutton.setText("Iniciar");
        Startbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartbuttonActionPerformed(evt);
            }
        });

        Terminatebutton.setText("Terminar");
        Terminatebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TerminatebuttonActionPerformed(evt);
            }
        });

        Restartbutton.setText("Reiniciar");
        Restartbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RestartbuttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Startbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Restartbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Terminatebutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Registerbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 55, Short.MAX_VALUE)
                .addComponent(jlabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Registerbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Startbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Restartbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Terminatebutton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>                        


private Runner[] runners = new Runner[5];

    private void RegisterbuttonActionPerformed(java.awt.event.ActionEvent evt) {                                               
                                                  
    String entrada = registro.getText();
        int contador = 0;
        
    if (!entrada.isEmpty() && contador < 5) {
        
        registro.setText("");
        contador++;
        nombresregistrados.append(entrada + "\n");
    if (contador == 5) {
        Registerbutton.setEnabled(false);
    }
    
    
    // Obtener el contenido actual de nombresregistrados
String currentText = nombresregistrados.getText();

// Dividir el contenido en líneas y contar el número de líneas
int numLines = currentText.split("\n").length;

// Verificar si ya hay 5 entradas en la lista
if (numLines >= 5) {
    // Mostrar mensaje de advertencia
    JOptionPane.showMessageDialog(null, "Ya se han registrado 5 nombres. No se pueden agregar más.");
Registerbutton.setEnabled(false);
}
    }
    }                                              

    private void StartbuttonActionPerformed(java.awt.event.ActionEvent evt) {                                            

Startbutton.addActionListener(new ActionListener() {
    @Override
    public void actionPerformed(ActionEvent e) {
        // Deshabilitar botón de inicio
        activeRunners = new ArrayList<>();
    
        Startbutton.setEnabled(false);

        // Inicializar ArrayList de corredores activos
        ArrayList<Runner> listaNombres = new ArrayList<Runner>();
        activeRunners.addAll(listaNombres);

        // Inicializar ArrayList de Threads de corredores activos
        ArrayList<ThreadRunner> activeThreads = new ArrayList<ThreadRunner>();

        // Crear Threads para corredores activos
        for (Runner runner : activeRunners) {
            ThreadRunner thread = new ThreadRunner(runner, resultados);
            activeThreads.add(thread);
            thread.start();
        }

        // Esperar a que los Threads terminen
        for (ThreadRunner thread : activeThreads) {
            try {
                thread.join();
            } catch (InterruptedException ex) {
                System.out.println("Interrupción del hilo: " + ex.getMessage());
            }
        }

   

        // Habilitar botones de terminar y reiniciar
        Terminatebutton.setEnabled(true);
        Restartbutton.setEnabled(true);
    }
});
    }                                           

    private void TerminatebuttonActionPerformed(java.awt.event.ActionEvent evt) {                                                
 Window window = SwingUtilities.windowForComponent(Terminatebutton);
window.dispose();
    }                                               

    private void RestartbuttonActionPerformed(java.awt.event.ActionEvent evt) {                                              
   Restartbutton.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            resetFields();
        Registerbutton.setEnabled(true);
        Terminatebutton.setEnabled(true);
        Startbutton.setEnabled(true);
        }

    });

   
    }                                             


    public static void main(String args[]) {
 
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AthleticalRaceInterface().setVisible(true);
            }
        });
    }

   
    
    
    // Variables declaration - do not modify                     
    private javax.swing.JButton Registerbutton;
    private javax.swing.JButton Restartbutton;
    private javax.swing.JButton Startbutton;
    private javax.swing.JButton Terminatebutton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel jlabel2;
    private javax.swing.JTextArea nombresregistrados;
    private javax.swing.JTextArea registro;
    private javax.swing.JTextArea resultados;
    // End of variables declaration                   
  private ArrayList<String> listaNombres;
 private void resetFields() {
        registro.setText("");
        nombresregistrados.setText("");
        resultados.setText("");
        listaNombres.clear();
 }    
 
    private List<Runner> activeRunners;


}
